.. pescador documentation master file, created by
   sphinx-quickstart on Fri Apr  3 10:03:34 2015.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Introduction
------------

Pescador is a library for streaming (numerical) data for use in iterative machine learning applications.

The core concept is the :ref:`Streamer` object, which encapsulates a Python `generator` to allow for re-use and
inter-process communication.

The basic use case is as follows:

    1. Define a generator function `g` which yields a dictionary of numpy arrays at each step
    2. Construct a :ref:`Streamer` object `S = Streamer(g, args...)`
    3. Iterate over examples generated by `S.generate()`.

On top of this basic functionality, pescador provides the following tools:

    - Buffering of sampled data into fixed-size batches (see :ref:`BufferedStreamer`)
    - Multiplexing multiple data streams with dynamic (see :ref:`Mux`)
    - Parallel processing (see :ref:`ZMQStreamer`)

For examples of each of these use-cases, refer to the :ref:`Examples` section.


Basic Usage
--------------
.. toctree::
    :maxdepth: 2

    example1
    example2
    example3

Examples
--------
.. toctree::
    :maxdepth: 2

    auto_examples/index

API Reference
-------------
.. toctree::
    :maxdepth: 2

    api


Changes
-------
.. toctree::
    :maxdepth: 2

    changes


Contribute
----------
- `Issue Tracker <http://github.com/pescadores/pescador/issues>`_
- `Source Code <http://github.com/pescadores/pescador>`_


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`

